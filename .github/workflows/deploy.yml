name: Deploy to S3

on:
  push:
    branches:
      - master 

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: './package-lock.json'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build with TypeScript checks disabled
        run: |
          # tsconfig.json 임시 수정 (여전히 유용함)
          cp tsconfig.json tsconfig.json.bak
          echo '{"compilerOptions":{"noEmit":false,"skipLibCheck":true,"strict":false,"noImplicitAny":false}}' > tsconfig.json
          
          # 환경 변수로 타입스크립트 체크 비활성화
          NEXT_DISABLE_TYPES=1 NODE_OPTIONS=--max_old_space_size=4096 npx next build --no-lint
          
          # 결과물을 out 디렉토리로 내보내기 
          npx next export
          
          # 원래 파일 복원
          mv tsconfig.json.bak tsconfig.json
          
          # 결과물 확인
          ls -la out
    
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2 
          
      - name: Deploy to S3
        run: |
          aws s3 sync out/ s3://${{ secrets.S3_BUCKET_NAME }} --delete
          
      - name: Invalidate CloudFront Distribution
        run: |
          aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"

